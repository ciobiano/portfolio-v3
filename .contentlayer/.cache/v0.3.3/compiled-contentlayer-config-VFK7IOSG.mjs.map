{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import readingTime from \"reading-time\";\nimport { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\n\nconst baseFields = {\n\ttitle: { type: \"string\", required: true },\n\tdescription: { type: \"string\", required: true },\n\tcreatedAt: { type: \"date\", required: true },\n\tupdatedAt: { type: \"date\", required: false },\n\tfeatured: { type: \"boolean\", required: false },\n\tarchived: { type: \"boolean\", required: false },\n\treadingTime: { type: \"string\", required: false },\n\tkeywords: { type: \"list\", of: { type: \"string\" }, required: false },\n};\n\nexport const Post = defineDocumentType(() => ({\n\tname: \"Post\",\n\tfilePathPattern: \"**/blogPosts/**/*.mdx\",\n\tcontentType: \"mdx\",\n\tfields: baseFields,\n\tcomputedFields: {\n\t\t reading_time: {\n      type: 'json',\n      resolve: post => readingTime(post.body.raw)\n    },\n\t\tslug: {\n\t\t\ttype: \"string\",\n\t\t\tresolve: (doc) => `${doc._raw.flattenedPath}`,\n\t\t},\n\t\tslugAsParams: {\n\t\t\ttype: \"string\",\n\t\t\tresolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n\t\t},\n\t},\n}));\n\nexport default makeSource({\n\tcontentDirPath: \"./app/data\",\n\tdocumentTypes: [Post],\n\tmdx: {\n\t\tesbuildOptions: (options) => {\n\t\t\toptions.loader = {\n\t\t\t\t...options.loader,\n\t\t\t\t\".png\": \"dataurl\",\n\t\t\t};\n\n\t\t\treturn options;\n\t\t},\n\t\trehypePlugins: [\n\t\t\trehypeSlug,\n\t\t\t[\n\t\t\t\trehypeAutolinkHeadings,\n\t\t\t\t{ properties: { ariaLabel: \"Link to section\" } },\n\t\t\t],\n\t\t\t[\n\t\t\t\trehypePrettyCode,\n\t\t\t\t{\n\t\t\t\t\ttheme: \"github-dark\",\n\t\t\t\t\tonVisitLine(node) {\n\t\t\t\t\t\t// prevent lines from collapsing in `display: grid` mode, and allow empty\n\t\t\t\t\t\t// lines to be copy/pasted\n\t\t\t\t\t\tif (node.children.length === 0) {\n\t\t\t\t\t\t\tnode.children = [{ type: \"text\", value: \" \" }];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnode.properties[\"data-line\"] = true;\n\t\t\t\t\t},\n\t\t\t\t\tonVisitHighlightedLine(node) {\n\t\t\t\t\t\tnode.properties[\"data-line-highlighted\"] = true;\n\t\t\t\t\t},\n\t\t\t\t\tonVisitHighlightedWord(node) {\n\t\t\t\t\t\tnode.properties[\"data-word-highlighted\"] = true;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\t\tremarkPlugins: [remarkGfm],\n\t},\n});\n"],
  "mappings": ";AAAA,OAAO,iBAAiB;AACxB,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAEtB,IAAM,aAAa;AAAA,EAClB,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC9C,WAAW,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,EAC1C,WAAW,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EAC3C,UAAU,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,EAC7C,UAAU,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA,EAC7C,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EAC/C,UAAU,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,GAAG,UAAU,MAAM;AACnE;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,gBAAgB;AAAA,IACd,cAAc;AAAA,MACX,MAAM;AAAA,MACN,SAAS,UAAQ,YAAY,KAAK,KAAK,GAAG;AAAA,IAC5C;AAAA,IACF,MAAM;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,GAAG,IAAI,KAAK;AAAA,IAC/B;AAAA,IACA,cAAc;AAAA,MACb,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,IACtE;AAAA,EACD;AACD,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACzB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACJ,gBAAgB,CAAC,YAAY;AAC5B,cAAQ,SAAS;AAAA,QAChB,GAAG,QAAQ;AAAA,QACX,QAAQ;AAAA,MACT;AAEA,aAAO;AAAA,IACR;AAAA,IACA,eAAe;AAAA,MACd;AAAA,MACA;AAAA,QACC;AAAA,QACA,EAAE,YAAY,EAAE,WAAW,kBAAkB,EAAE;AAAA,MAChD;AAAA,MACA;AAAA,QACC;AAAA,QACA;AAAA,UACC,OAAO;AAAA,UACP,YAAY,MAAM;AAGjB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC/B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC9C;AAEA,iBAAK,WAAW,WAAW,IAAI;AAAA,UAChC;AAAA,UACA,uBAAuB,MAAM;AAC5B,iBAAK,WAAW,uBAAuB,IAAI;AAAA,UAC5C;AAAA,UACA,uBAAuB,MAAM;AAC5B,iBAAK,WAAW,uBAAuB,IAAI;AAAA,UAC5C;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,IACA,eAAe,CAAC,SAAS;AAAA,EAC1B;AACD,CAAC;",
  "names": []
}
